// backend/src/index.js
const path = require("path");
const express = require("express");
const cors = require("cors");
require("dotenv").config({ path: "../.env" });

const sequelize = require("./sequelize");
const linkController = require("./controllers/linkController");

const userRoutes = require("./routes/userRoutes");
const linkRoutes = require("./routes/linkRoutes");
const accessRoutes = require("./routes/accessRoutes");
const devLinksRoutes = require("./routes/devLinksRoutes");

const app = express();

app.use(cors());
app.use(express.json());
app.use(express.static(path.join(__dirname, "public")));

// 🔹 Viewer: отдаём страницу вместо редиректа
app.get("/open/:token", (req, res) => {
  res.sendFile(path.join(__dirname, "public", "viewer.html"));
});

// 🔹 API роуты
app.use("/api/users", userRoutes);
app.use("/api/links", linkRoutes);
app.use("/api/access", accessRoutes);
app.use("/api/dev-links", devLinksRoutes); // ✅ dev helper

// 🔹 оуты авторизации/сессий/данных для viewer (монтируются на /open)
app.use("/open", accessRoutes);

// 🔹 инг
app.get("/ping", (req, res) => res.json({ message: "pong" }));

const PORT = process.env.PORT || 3000;

async function start() {
  try {
    await sequelize.authenticate();
    console.log("✅ одключение к  успешно!");
    await sequelize.sync({ alter: true });
    console.log("✅ Таблицы синхронизированы!");

    app.listen(PORT, () => {
      console.log(`✅ Backend запущен на порту ${PORT}`);
    });
  } catch (err) {
    console.error("❌ шибка подключения к :", err);
  }
}

start();
